/*
* 判断一个 9x9 的数独是否有效。只需要根据以下规则，验证已经填入的数字是否有效即可。
* 数字 1-9 在每一行只能出现一次。
* 数字 1-9 在每一列只能出现一次。
* 数字 1-9 在每一个以粗实线分隔的 3x3 宫内只能出现一次。
* 说明:
一个有效的数独（部分已被填充）不一定是可解的。
只需要根据以上规则，验证已经填入的数字是否有效即可。
给定数独序列只包含数字 1-9 和字符 '.' 。
给定数独永远是 9x9 形式的。
* */

/**
 * @param {character[][]} board
 * @return {boolean}
 */
// 双层遍历
const isValidSudoku = (board) => {
  let rows = new Set()
  let cows = new Set()
  let boxes = new Set()
  for (let y=0; y<9; y++) {
    for (let x=0; x<9; x++) {
      let num = board[y][x]
      if (num !== '.') {
        let boxIndex = Math.floor(y/3) * 3 + Math.floor(x/3)
        console.log('boxIndex>>>', boxIndex)
        if (rows.has(`${x}-${num}`) || cows.has(`${y}-${num}`) || boxes.has(`${boxIndex}-${num}`)) {
          return false
        }
        rows.add(`${x}-${num}`)
        cows.add(`${y}-${num}`)
        boxes.add(`${boxIndex}-${num}`)
      }
    }
  }
  return true
};

const test1 = [
  ["5","3",".",".","7",".",".",".","."],
  ["6",".",".","1","9","5",".",".","."],
  [".","9","8",".",".",".",".","6","."],
  ["8",".",".",".","6",".",".",".","3"],
  ["4",".",".","8",".","3",".",".","1"],
  ["7",".",".",".","2",".",".",".","6"],
  [".","6",".",".",".",".","2","8","."],
  [".",".",".","4","1","9",".",".","5"],
  [".",".",".",".","8",".",".","7","9"]
]
const test2 = [
  ["8","3",".",".","7",".",".",".","."],
  ["6",".",".","1","9","5",".",".","."],
  [".","9","8",".",".",".",".","6","."],
  ["8",".",".",".","6",".",".",".","3"],
  ["4",".",".","8",".","3",".",".","1"],
  ["7",".",".",".","2",".",".",".","6"],
  [".","6",".",".",".",".","2","8","."],
  [".",".",".","4","1","9",".",".","5"],
  [".",".",".",".","8",".",".","7","9"]
]
console.log(isValidSudoku(test1))
console.log('>>>>>>>>>>>>>>>>>>')
console.log(isValidSudoku(test2))
